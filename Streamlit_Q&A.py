# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TqzTALdg8v-nZEu8MuxpaPYf3w4BhuLB
"""

import streamlit as st
import openai
import fitz  # PyMuPDF
import os
from openai import OpenAI

st.set_page_config(page_title="AI Interview Bot", layout="centered")
openai.api_key = st.secrets["openai"]["api_key"]

def extract_text_from_resume(file):
    with open("temp_resume.pdf", "wb") as f:
        f.write(file.read())
    doc = fitz.open("temp_resume.pdf")
    return "\n".join(page.get_text() for page in doc)

# ================== Helper: Generate questions ==================
from openai import OpenAI, RateLimitError
import time

def generate_questions(resume_text, jd_text):
    prompt = f"""
You are an intelligent interview bot. Based on the job description and resume, generate 5 technical and 3 behavioral interview questions.

Job Description:
{jd_text}

Resume:
{resume_text}

Return only the list of questions in bullet points.
"""

    client = OpenAI(api_key=st.secrets["openai"]["api_key"])

    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": prompt}]
        )
        return response.choices[0].message.content.strip()

    except RateLimitError:
        return "⚠️ You're being rate-limited by OpenAI. Please wait 1–2 minutes and try again."

st.title("🤖 AI Video Interview Question Generator")

jd_input = st.text_area("📄 Paste the Job Description")

uploaded_file = st.file_uploader("📎 Upload Resume (PDF only)", type=["pdf"])

if st.button("Generate Questions"):
    if not uploaded_file or not jd_input.strip():
        st.warning("Please upload a resume and enter the job description.")
    else:
        resume_text = extract_text_from_resume(uploaded_file)
        with st.spinner("Generating questions..."):
            questions = generate_questions(resume_text, jd_input)
        st.success("✅ Questions generated!")
        st.markdown("### 🧠 Interview Questions")
        st.markdown(questions)

